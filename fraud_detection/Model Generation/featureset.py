#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Sep 20 11:52:29 2018

@author: spierre91
"""
#this diconary contain summary statistics for 3 month trade data for 59 coinpairs
import pandas as pd

data= {'Max_Return':[69.054128,47.046675,16.982759,107.120743,
                  53.737215,37.127998,6.973501,3.070788,19.480519,5.394191,
                  7.347447, 7.570978,10.235470,13.574661,36.563830,33.551913,
                  19.479554,28.145695,11.646411,21.126761,21.210341,25.587293,
                  10.07957559681698,7.257646448937267,7.965451055662191,
                  11.930405965202985,24.219554030874786,49.55357142857143,
                  10.411622276029046,50.75376884422109,36.635574139594716,
                  43.98423344670841,9.137803979366252,7.2788353863381925,
                  16.607460035523975,11.336717428087987,2.5680933852139964,
                  12.049433573635417,26.56250000000001,34.49490994518404,
                  60.36762637156523,21.296296296296312,38.88888888888889,
                  59.102099927588704,34.7163420829805,9.12684153790873,
                  19.599999999999998,14.22068965517241,10.034115138592755,14.358108108108114,
                  10.342084327764534,9.325820866524191,17.033773861967695,5.632706035042177,
                  11.470113085621971,10.07957559681698,12.591756070016945,13.300492610837436,
                  10.021493820526599,],
    'Price_volatility':[1.601196,1.723617,1.077522, 1.901122,1.410351,
                          1.378802,1.388611,0.507610,1.421981,1.033514,1.092064,
                          0.822655,1.208741,1.507744,0.942422,1.157895,1.048628,
                          1.349924,1.009362,1.285781,1.039239,0.988303,
                          0.7512215943877845,0.7193599962081045,0.883974572526983,
                          0.959903316495451,1.0606186358860459,1.7152549158363388,
                          1.0164490023008228,0.940059963868935,1.3260213709202282,
                          1.2087579454662196,0.904563315840688,1.060610993297516,
                          1.1559655837093272,0.8030212637018451,0.596633996892718,
                          0.9938982911480504,1.1350448315376274,1.9912539971305767,
                          1.2068781552943437,0.8111213045058132,1.2980626903738905,
                          1.0963034777059253,1.1016265726230685,0.9148203920551508,
                          1.0628187516733278,0.8408070523733272,0.6912324832905062,
                          0.8925303874812925,0.8840512032090797,1.0182257659777805,
                          0.9044184831724402,0.6078705691213314,1.1155495143225025,
                          0.7775775957610188,0.9389701874892057,1.0268304639127277,
                          1.077472480777851],
      'Volume':[18.147312,3097.072727,466.832930,540.939394,
                522.185185,3762.383333,35.887923,5.225707,27.906280,5.301447,
                93.197737, 13.008963,2.289697,11.475397,130.818182,355.925926,
                25.891217,84.831379,11.501157,1858.257895,397.736486,817.363636,
                106.9467900520532,6506.222222222222,34.62874616705588,
                266.37829912023454,2635.7741935483873,500.9320893903233,
                22.02613551940567,588.6956521739131,390.09333333333336,
                47.4868778280543,639.5197132616486,1082.3684210526317,
                43.454861268727015,178.87979023799912,3.5336135685018366,
                1915.3125,18838.0,1058.965811965812, 61.21603641456583,
                29.298739672992507,3290.793103448276,171.40694789081886,
                17.942500139985736,323.65909090909093,304.24038461538464,
                224.35714285714286,6.211912704577072,3271.6632653061215,5.350205853115834,
                2.7788224651628304,225.35,8.949268770117232,6896.7941176470595,
                106.9467900520532,30.52094510736143,1048.15,45.66602316602317],
      
       'Class':[ 'P', 'P', 'P','P','P','P','NP','NP','P',
                'NP','NP','NP','NP','NP', 'P', 'P','NP', 'P','NP',
                'P','P','P','NP','NP','NP','NP','P','P', 'NP','P', 'P','P',
                'NP','NP','NP', 'NP','NP','NP','P','P','P','P','P','P','P',
                'NP','P','NP','NP','NP','NP','NP','P','NP', 'NP','NP','NP','NP',
                'NP',],
       'Symbol':['MANA/BTC', 'DLT/BTC', 'APPC/BTC',
                 'OST/BTC','AST/BTC','CLOAK/BTC','WAN/BTC','TUSD/BTC',
                 'MFT/BTC','ZIL/BTC','LOOM/BTC', 'BTG/BTC', 'BQX/BTC', 
                 'DOCK/BTC', 'STORJ/BTC', 'SNM/BTC','POWR/BTC','POE/BTC',
                 'NULS/BTC', 'MTH/BTC', 'MTL/BTC', 'MDA/BTC','FUN/BTC',
                 'GXS/BTC','GVT/BTC','MCO/BTC','WINGS/BTC','DNT/BTC',
                 'SALT/BTC','XZC/BTC','POA/BTC', 'LUN/BTC', 'ARK/BTC','AMB/BTC',
                 'AION/BTC','AEB/BTC','ADA/BTC','AGI/BTC','SNGLS/BTC','BCD/BTC',
                 'ADX/BTC','OMG/BTC','CHAT/BTC','KNC/BTC','GTO/BTC','CMT/BTC',
                 'CND/BTC','DGD/BTC','DASH/BTC','INS/BTC','ICX/BTC','ELF/BTC',
                 'ENJ/BTC','EOS/BTC','FUEL/BTC','FUN/BTC','GAS/BTC','LEND/BTC',
                 'LINK/BTC',],
        'Target':[2, 2, 1, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2,
                  0,1,0,1,1,1,0,0,0,0,1,2,0,2,2,1,0,0,0,0,0,0,2,2,2,
                  2,2,2,2,0,1,0,0,0,0,0,1,0,1,0,0,0,0]
#        'Number of Pumps':[2,]
        }   


#this part of the code writes the feature set to a json file, then reads the json file into a dataframe
#use this upon modifying the dictionary (ie: adding features for an additional coin pair)
import json
with open('featureset.json', 'w') as fp:
    json.dump(data, fp)

